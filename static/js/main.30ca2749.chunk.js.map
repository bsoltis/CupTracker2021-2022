{"version":3,"sources":["components/Players.js","components/TeamLogo.js","components/Leaders.js","App.js","reportWebVitals.js","index.js"],"names":["teams","Players","players","this","props","className","map","player","name","team","Component","TeamLogo","href","teamId","id","Leaders","sort","a","b","points","ProgressBar","now","label","max","App","state","currentCupHolder","abbreviation","findTeamInPlayers","bind","addOneToPoints","key","includes","today","Date","date","getFullYear","getMonth","getDate","url","fetch","then","res","json","result","i","length","gamesOnDate","games","j","game","status","away","home","stateCopy","otherTeam","homeTeam","scores","setState","undefined","find","error","locationName","teamName","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ca2749.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst teams = {\r\n     'PIT':'Pittsburgh Penguins',\r\n     'TBL':'Tampa Bay Lightning',\r\n     'VGK':'Vegas Golden Knights',\r\n     'MTL':'Montreal Canadiens',\r\n     'TOR':'Toronto Maple Leafs',\r\n     'BOS':'Boston Bruins',\r\n     'CAR':'Carolina Hurricanes',\r\n     'NSH':'Nashville Predators',\r\n     'CAL':'Calgary Flames',\r\n     'FLA':'Florida Panthers',\r\n     'NJD':'New Jersey Devils',\r\n     'WPG':'Winnipeg Jets',\r\n     'VAN':'Vancouver Canucks',\r\n     'SEA':'Seattle Kraken',\r\n     'CHI':'Chicago Blackhawks',\r\n     'PHI':'Philadelphia Flyers',\r\n     'MIN':'Minnesota Wild',\r\n     'BUF':'Buffalo Sabres',\r\n     'ANA':'Anaheim Ducks',\r\n     'COL':'Colorado Avalanche',\r\n     'WSH':'Washington Capitals',\r\n     'STL':'St. Louis Blues',\r\n     'OTT':'Ottawa Senators',\r\n     'NYI':'New York Islanders',\r\n     'DAL':'Dallas Stars',\r\n     'LAK':'LA Kings',\r\n     'EDM':'Edmonton Oilers',\r\n     'NYR':'New York Rangers'\r\n};\r\n\r\nexport default class Players extends Component {\r\n\r\n\r\n    render() {\r\n        let players = this.props.players\r\n\r\n        return (\r\n            <div className=\"row justify-content-center mt-4\">\r\n                {players.map(player => (\r\n                    <div className=\"col-4 text-center mt-2\">\r\n                        <h3>{player.name}</h3>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                        {player.teams.map(team => (\r\n                            <li className=\"list-group-item list-group-item-dark\">{teams[team]}</li>\r\n                        ))}\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TeamLogo extends Component {\r\n    render() {\r\n        let href = `#team-${this.props.teamId}-20202021-dark`\r\n        \r\n        return (\r\n            <div id=\"currentCupHolderImg\">\r\n                <span className=\"team-logo\">\r\n                    <svg className=\"team-logo__image\">\r\n                        <use href={href}>\r\n\r\n                        </use>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nexport default class Leaders extends Component {\n    render() {\n        let players = this.props.players\n\n        players = players.sort((a, b) => (a.points < b.points) ? 1 : -1)\n\n        return (\n            <div>\n                <h6>1st place</h6>\n                <ProgressBar now={players[0].points} label={`${players[0].points} - ${players[0].name}`} max={10} />\n                <h6>2nd place</h6>\n                <ProgressBar now={players[1].points} label={`${players[1].points} - ${players[1].name}`} max={10} />\n                <h6>3rd place</h6>\n                <ProgressBar now={players[2].points} label={`${players[2].points} - ${players[1].name}`} max={10} />\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Players from './components/Players';\nimport TeamLogo from './components/TeamLogo';\nimport Leaders from './components/Leaders';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentCupHolder: {\n                abbreviation: \"TBL\"\n            },\n            players: [\n                {\n                    \"name\": \"Brian\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"BOS\",\n                        \"CAR\",\n                        \"NSH\",\n                        \"CAL\"\n                    ]\n                },\n                {\n                    \"name\": \"Chris\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"FLA\",\n                        \"NJD\",\n                        \"WPG\",\n                        \"VAN\"\n                    ]\n                },\n                {\n                    \"name\": \"Kyle\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"PIT\",\n                        \"CHI\",\n                        \"SEA\",\n                        \"PHI\"\n                    ]\n                },\n                {\n                    \"name\": \"Nick\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"VGK\",\n                        \"MIN\",\n                        \"BUF\",\n                        \"ANA\"\n                    ]\n                },\n                {\n                    \"name\": \"Jack\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"COL\",\n                        \"WSH\",\n                        \"STL\",\n                        \"OTT\"\n                    ]\n                },\n                {\n                    \"name\": \"Tim\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"NYI\",\n                        \"TOR\",\n                        \"DAL\",\n                        \"LAK\"\n                    ]\n                },\n                {\n                    \"name\": \"Matt\",\n                    \"points\": 0,\n                    \"teams\" : [\n                        \"TBL\",\n                        \"EDM\",\n                        \"NYR\",\n                        \"MTL\"\n                    ]\n                } \n            ]\n        }\n\n        this.findTeamInPlayers = this.findTeamInPlayers.bind(this)\n        this.addOneToPoints = this.addOneToPoints.bind(this)\n    }\n\n    addOneToPoints(players, name) {\n        for(var key in players){\n            if(players[key].name == name){\n                players[key].points = players[key].points + 1;\n            }\n        }\n        return players;\n    }\n\n    findTeamInPlayers(player) {\n        return player.teams.includes(this.state.currentCupHolder.abbreviation)\n    }\n\n    componentDidMount() {\n        let today = new Date();\n        let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n        let url = `https://nhl-score-api.herokuapp.com/api/scores?startDate=2021-10-12&endDate=${date}`\n        fetch(url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    for (let i = 0; i < result.length; i++) {\n\n                        let gamesOnDate = result[i];\n                        if (gamesOnDate.games.length > 0) {\n                            for (let j = 0; j < gamesOnDate.games.length; j++) {\n                                let game = gamesOnDate.games[j]\n\n                                if (game.status.state === 'FINAL') {\n                                    if (game.teams.away.abbreviation === this.state.currentCupHolder.abbreviation || game.teams.home.abbreviation === this.state.currentCupHolder.abbreviation) {\n                                        var otherTeam = game.teams.away\n                                        var homeTeam = game.teams.home\n                                        var isCurrentCupHolderHome = this.state.currentCupHolder.abbreviation === homeTeam.abbreviation\n                                        if (!isCurrentCupHolderHome) {\n                                            otherTeam = game.teams.home\n                                        }\n\n                                        if (game.scores[this.state.currentCupHolder.abbreviation] < game.scores[otherTeam.abbreviation]) {\n                                            // cup switches\n                                            this.setState({currentCupHolder: otherTeam})\n\n                                            var stateCopy = [...this.state.players];\n                                            var team = stateCopy.find(this.findTeamInPlayers)\n                                            if (team !== undefined) {\n                                                this.addOneToPoints(stateCopy, team.name)\n                                            }\n\n                                            this.setState({ \n                                                players: stateCopy \n                                            })\n                                        }\n                                        else\n                                        {\n                                            var stateCopy = [...this.state.players];\n                                            var team = stateCopy.find(this.findTeamInPlayers)\n                                            if (team !== undefined) {\n                                                this.addOneToPoints(stateCopy, team.name)\n                                            }\n                                            \n                                            this.setState({ \n                                                players: stateCopy \n                                            })\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                (error) => {\n                   \n                }\n            )\n    }\n\n    render() {\n        return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                    <div className=\"col-md-5 mb-4\">\n                            <h3>Current Cup Holder</h3>\n                            <h6 id=\"teamName\">\n                                {this.state.currentCupHolder.locationName + ' ' + this.state.currentCupHolder.teamName}\n                            </h6>\n                            <TeamLogo teamId={this.state.currentCupHolder.id} />\n                        </div>\n                        <div className=\"col-md-7\">\n                            <h3>Current Cup Leaders</h3>\n                            <Leaders players={this.state.players} />\n                        </div>\n                        \n                    </div>\n                    <Players players={this.state.players} />\n\n                    \n                </div>\n            </header>\n        </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}